function [ n_data, a, x, fx ] = gamma_inc_values ( n_data )

%% GAMMA_INC_VALUES returns some values of the incomplete Gamma function.
%
%  Discussion:
%
%    The (normalized) incomplete Gamma function P(A,X) is defined as:
%
%      PN(A,X) = 1/Gamma(A) * Integral ( 0 <= T <= X ) T**(A-1) * exp(-T) dT.
%
%    With this definition, for all A and X,
%
%      0 <= PN(A,X) <= 1
%
%    and
%
%      PN(A,INFINITY) = 1.0
%
%    In Mathematica, the function can be evaluated by:
%
%      1 - GammaRegularized[A,X]
%
%  Modified:
%
%    10 November 2004
%
%  Author:
%
%    John Burkardt
%
%  Reference:
%
%    Milton Abramowitz and Irene Stegun,
%    Handbook of Mathematical Functions,
%    US Department of Commerce, 1964.
%
%    Stephen Wolfram,
%    The Mathematica Book,
%    Fourth Edition,
%    Wolfram Media / Cambridge University Press, 1999.
%
%  Parameters:
%
%    Input/output, integer N_DATA.  The user sets N_DATA to 0 before the
%    first call.  On each call, the routine increments N_DATA by 1, and
%    returns the corresponding data; when there is no more data, the
%    output value of N_DATA will be 0 again.
%
%    Output, real A, the parameter of the function.
%
%    Output, real X, the argument of the function.
%
%    Output, real FX, the value of the function.
%
  n_max = 20;

  a_vec = [ ...
     0.10E+00, ...
     0.10E+00, ...
     0.10E+00, ...
     0.50E+00, ...
     0.50E+00, ...
     0.50E+00, ...
     0.10E+01, ...
     0.10E+01, ...
     0.10E+01, ...
     0.11E+01, ...
     0.11E+01, ...
     0.11E+01, ...
     0.20E+01, ...
     0.20E+01, ...
     0.20E+01, ...
     0.60E+01, ...
     0.60E+01, ...
     0.11E+02, ...
     0.26E+02, ...
     0.41E+02  ];

  fx_vec = [ ...
     0.7382350532339351E+00, ...
     0.9083579897300343E+00, ...
     0.9886559833621947E+00, ...
     0.3014646416966613E+00, ...
     0.7793286380801532E+00, ...
     0.9918490284064973E+00, ...
     0.9516258196404043E-01, ...
     0.6321205588285577E+00, ...
     0.9932620530009145E+00, ...
     0.7205974576054322E-01, ...
     0.5891809618706485E+00, ...
     0.9915368159845525E+00, ...
     0.1018582711118352E-01, ...
     0.4421745996289254E+00, ...
     0.9927049442755639E+00, ...
     0.4202103819530612E-01, ...
     0.9796589705830716E+00, ...
     0.9226039842296429E+00, ...
     0.4470785799755852E+00, ...
     0.7444549220718699E+00 ];

  x_vec = [ ...
     0.30E-01, ...
     0.30E+00, ...
     0.15E+01, ...
     0.75E-01, ...
     0.75E+00, ...
     0.35E+01, ...
     0.10E+00, ...
     0.10E+01, ...
     0.50E+01, ...
     0.10E+00, ... 
     0.10E+01, ...
     0.50E+01, ...
     0.15E+00, ...
     0.15E+01, ...
     0.70E+01, ...
     0.25E+01, ...
     0.12E+02, ...
     0.16E+02, ...
     0.25E+02, ...
     0.45E+02 ];

  if ( n_data < 0 )
    n_data = 0;
  end

  n_data = n_data + 1;

  if ( n_max < n_data )
    n_data = 0;
    a = 0.0;
    x = 0.0;
    fx = 0.0;
  else
    a = a_vec(n_data);
    x = x_vec(n_data);
    fx = fx_vec(n_data);
  end
