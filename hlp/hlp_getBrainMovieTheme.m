function theme = hlp_getBrainMovieTheme(varargin)
% return a "theme" for the brainmovie
% this specifies lighting and shading properties for each mesh
%
% See Also: pop_est_fitMVAR(), pop_pre_prepData()
%
% Author: Tim Mullen 2012, SCCN/INC, UCSD.
% Email:  tim@sccn.ucsd.edu

% This function is part of the Source Information Flow Toolbox (SIFT)
%
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 3 of the License, or
% (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

g = arg_define(varargin, ...
    arg({'theme'},'dream',{'classic','dream','darkdream','monet','brightclassic','dull_matte'},'BrainMovie Color Theme'));


theme.name = g.theme;
theme.lightingfcn = @set_lighting;

switch lower(g.theme)
    
    case 'classic'
        % the original brainmovie theme
        theme.graph = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',10, ...
            'SpecularColorReflectance',1);
        
        theme.cortex  = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',20, ...
            'SpecularColorReflectance',1);
        
        theme.skull = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',20, ...
            'SpecularColorReflectance',1);
        
        theme.scalp = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',20, ...
            'SpecularColorReflectance',1);
        
        theme.csf   = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',20, ...
            'SpecularColorReflectance',1);
        
        theme.custom  = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',20, ...
            'SpecularColorReflectance',1);
        
    case 'dull_matte'
                
        % dull matte 
        theme.graph = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.2, ...
            'SpecularExponent',10, ...
            'SpecularColorReflectance',1);
        
        theme.cortex  = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.8, ...
            'SpecularStrength',0.0, ...
            'SpecularExponent',10, ...
            'SpecularColorReflectance',1, ...
            'BackFaceLighting','reverselit');
        
        theme.skull = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',20, ...
            'SpecularColorReflectance',1);
        
        theme.scalp = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',20, ...
            'SpecularColorReflectance',1);
        
        theme.csf   = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',20, ...
            'SpecularColorReflectance',1);
        
        theme.custom  = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.8, ...
            'SpecularStrength',0.0, ...
            'SpecularExponent',10, ...
            'SpecularColorReflectance',1, ...
            'BackFaceLighting','reverselit');
        
    case 'brightclassic'
        
        % the original brainmovie theme
        %         theme.graph = struct(...
        %             'AmbientStrength',1, ...
        %             'DiffuseStrength',1, ...
        %             'SpecularStrength',1, ...
        %             'SpecularExponent',25, ...
        %             'SpecularColorReflectance',0.5);
        
        theme.graph = struct(...
            'AmbientStrength',0.8, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',1, ...
            'SpecularExponent',25, ...
            'SpecularColorReflectance',1);
        
        theme.cortex  = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',20, ...
            'SpecularColorReflectance',1);
        
        theme.skull = struct(...
            'AmbientStrength',0.7, ...
            'DiffuseStrength',0.2, ...
            'SpecularStrength',1, ...
            'SpecularExponent',25, ...
            'SpecularColorReflectance',1);
        
        theme.scalp = struct(...
            'AmbientStrength',0.2, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',20, ...
            'SpecularColorReflectance',1);
        
        theme.csf   = struct(...
            'AmbientStrength',0.2, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',20, ...
            'SpecularColorReflectance',1);
        
        theme.custom  = struct(...
            'AmbientStrength',0.3, ...
            'DiffuseStrength',0.6, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',20, ...
            'SpecularColorReflectance',1);
        
    case 'monet'
        % set facelighting to 'none'
        % set colortable to jet
        
        theme = hlp_getBrainMovieTheme('classic');
        theme.name = 'monet';
        
    case 'picasso'
        % TODO
    case 'metalic'
        % TODO
    case 'bluebrain'
        % TODO
    case 'pulse'
        % TODO
    case 'tron'
        % TODO
        
    case 'dream'
        theme.graph = struct(...
            'AmbientStrength',1, ...
            'DiffuseStrength',1, ...
            'SpecularStrength',1, ...
            'SpecularExponent',25, ...
            'SpecularColorReflectance',0.5);
        
        theme.cortex  = struct(...
            'AmbientStrength',0, ...
            'DiffuseStrength',0.3, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',10, ...
            'SpecularColorReflectance',0.2, ...
            'FaceAlpha',0.6);
        
        theme.skull = struct(...
            'AmbientStrength',0.2, ...
            'DiffuseStrength',1, ...
            'SpecularStrength',1, ...
            'SpecularExponent',25, ...
            'SpecularColorReflectance',1, ...
            'FaceAlpha',0.08,'FaceColor',[1,0.75,0.65]);
        
        theme.scalp = struct(...
            'AmbientStrength',0.2, ...
            'DiffuseStrength',1, ...
            'SpecularStrength',1, ...
            'SpecularExponent',25, ...
            'SpecularColorReflectance',1, ...
            'FaceAlpha',0.08,'FaceColor',[1,0.75,0.65]);
        
        theme.csf   = struct(...
            'AmbientStrength',0.2, ...
            'DiffuseStrength',1, ...
            'SpecularStrength',1, ...
            'SpecularExponent',25, ...
            'SpecularColorReflectance',1, ...
            'FaceAlpha',0.08,'FaceColor',[1,0.75,0.65]);
        
        theme.custom  = struct(...
            'AmbientStrength',0, ...
            'DiffuseStrength',0.3, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',10, ...
            'SpecularColorReflectance',0.2, ...
            'FaceAlpha',0.6);
        
        theme.evalcmd = {'camlight headlight'};
    case 'darkdream'
        
        theme.graph = struct(...
            'AmbientStrength',1, ...
            'DiffuseStrength',1, ...
            'SpecularStrength',1, ...
            'SpecularExponent',25, ...
            'SpecularColorReflectance',0.5);
        
        theme.cortex  = struct(...
            'AmbientStrength',0, ...
            'DiffuseStrength',0.3, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',10, ...
            'SpecularColorReflectance',0.2, ...
            'FaceAlpha',0.6);
        
        theme.skull = struct(...
            'AmbientStrength',0.8, ...
            'DiffuseStrength',0, ...
            'SpecularStrength',1, ...
            'SpecularExponent',25, ...
            'SpecularColorReflectance',1, ...
            'FaceAlpha',0.05,'FaceColor',[1,0.8,0.8]);
        
        theme.scalp = struct(...
            'AmbientStrength',0.8, ...
            'DiffuseStrength',0, ...
            'SpecularStrength',1, ...
            'SpecularExponent',25, ...
            'SpecularColorReflectance',1, ...
            'FaceAlpha',0.05,'FaceColor',[1,0.8,0.8]);
        
        theme.csf   = struct(...
            'AmbientStrength',0.8, ...
            'DiffuseStrength',0, ...
            'SpecularStrength',1, ...
            'SpecularExponent',25, ...
            'SpecularColorReflectance',1, ...
            'FaceAlpha',0.05,'FaceColor',[1,0.8,0.8]);
        
        
        theme.custom  = struct(...
            'AmbientStrength',0, ...
            'DiffuseStrength',0.3, ...
            'SpecularStrength',0.9, ...
            'SpecularExponent',10, ...
            'SpecularColorReflectance',0.2, ...
            'FaceAlpha',0.6);
end



function handles = set_lighting(hax,theme_name,lh)

if nargin<3
    lh = []; end
    
handles = [];

switch theme_name
    case 'classic'
        %         handles(1) = light('parent',hax,'position',
        if isempty(lh)
            lh(1) = light('parent',hax);
            lh(2) = light('parent',hax);
        end
        handles(1) = camlight(lh(1),'left');
        handles(2) = camlight(lh(2),'right');
        set(handles,'parent',hax);
        
    case {'dream', 'darkdream'}
        if isempty(lh)
            lh = light('parent',hax); end
        handles(1) = camlight(lh,'headlight');
        set(handles,'parent',hax);
        
    case 'monet'
        lighting(hax,'none');
        
    otherwise
        if isempty(lh)
            lh(1) = light('parent',hax);
            lh(2) = light('parent',hax);
        end
        handles(1) = camlight(lh(1),'left');
        handles(2) = camlight(lh(2),'right');
        set(handles,'parent',hax);
end



