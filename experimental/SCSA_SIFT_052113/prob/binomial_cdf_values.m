function [ n_data, a, b, x, fx ] = binomial_cdf_values ( n_data )

%% BINOMIAL_CDF_VALUES returns some values of the binomial CDF.
%
%  Discussion:
%
%    CDF(X)(A,B) is the probability of at most X successes in A trials,
%    given that the probability of success on a single trial is B.
%
%    In Mathematica, the function can be evaluated by:
%
%      Needs["Statistics`DiscreteDistributions`]
%      dist = BinomialDistribution [ n, p ]
%      CDF [ dist, x ]
%
%  Modified:
%
%    15 August 2004
%
%  Author:
%
%    John Burkardt
%
%  Reference:
%
%    Milton Abramowitz and Irene Stegun,
%    Handbook of Mathematical Functions,
%    US Department of Commerce, 1964.
%
%    Stephen Wolfram,
%    The Mathematica Book,
%    Fourth Edition,
%    Wolfram Media / Cambridge University Press, 1999.
%
%    Daniel Zwillinger,
%    CRC Standard Mathematical Tables and Formulae,
%    30th Edition, CRC Press, 1996, pages 651-652.
%
%  Parameters:
%
%    Input/output, integer N_DATA.  The user sets N_DATA to 0 before the
%    first call.  On each call, the routine increments N_DATA by 1, and
%    returns the corresponding data; when there is no more data, the
%    output value of N_DATA will be 0 again.
%
%    Output, integer A, a parameter of the function.
%
%    Output, real B, a parameter of the function.
%
%    Output, integer X, the argument of the function.
%
%    Output, real FX, the value of the function.
%
  n_max = 17;

  a_vec = [ ...
     2,  2,  2,  2, ...
     2,  4,  4,  4, ...
     4, 10, 10, 10, ...
    10, 10, 10, 10, ...
    10 ];

  b_vec = [ ...
     0.05E+00, ...
     0.05E+00, ...
     0.05E+00, ...
     0.50E+00, ...
     0.50E+00, ...
     0.25E+00, ...
     0.25E+00, ...
     0.25E+00, ...
     0.25E+00, ...
     0.05E+00, ...
     0.10E+00, ...
     0.15E+00, ...
     0.20E+00, ...
     0.25E+00, ...
     0.30E+00, ...
     0.40E+00, ...
     0.50E+00  ];

  fx_vec = [ ...
     0.9025000000000000E+00, ...
     0.9975000000000000E+00, ...
     0.1000000000000000E+01, ...
     0.2500000000000000E+00, ...
     0.7500000000000000E+00, ...
     0.3164062500000000E+00, ...
     0.7382812500000000E+00, ...
     0.9492187500000000E+00, ...
     0.9960937500000000E+00, ...
     0.9999363101685547E+00, ...
     0.9983650626000000E+00, ...
     0.9901259090013672E+00, ...
     0.9672065024000000E+00, ...
     0.9218730926513672E+00, ...
     0.8497316674000000E+00, ...
     0.6331032576000000E+00, ...
     0.3769531250000000E+00 ];

  x_vec = [ ...
     0, 1, 2, 0, ...
     1, 0, 1, 2, ...
     3, 4, 4, 4, ...
     4, 4, 4, 4, ...
     4 ];

  if ( n_data < 0 )
    n_data = 0;
  end
 
  n_data = n_data + 1;

  if ( n_max < n_data )
    n_data = 0;
    a = 0;
    b = 0.0;
    x = 0;
    fx = 0.0;
  else
    a = a_vec(n_data);
    b = b_vec(n_data);
    x = x_vec(n_data);
    fx = fx_vec(n_data);
  end



